<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>驱动开发学习笔记（1）</title>
      <link href="/2022/01/19/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%881%EF%BC%89/"/>
      <url>/2022/01/19/%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows-驱动开发学习笔记（1）"><a href="#Windows-驱动开发学习笔记（1）" class="headerlink" title="Windows 驱动开发学习笔记（1）"></a>Windows 驱动开发学习笔记（1）</h1><hr><p>本文需要读者拥有以下知识。</p>1. C或者C++语法基础（重要）2. 计算机组成原理（略微）3. 熟练使用谷歌百度等搜索引擎（必要）<p>本系列文章内程序的编写和测试环境均为 visual studio 2013 和 win10。<br>开发环境搭建可以参考<a href="https://blog.csdn.net/newnewman80/article/details/90754999">windows10 驱动开发环境 VS2019+WDK10</a></p><h4 id="什么是驱动？"><a href="#什么是驱动？" class="headerlink" title="什么是驱动？"></a>什么是驱动？</h4><p>驱动就是一个特别的软件。<br>驱动程序运行在系统的内核模式下，而我们平时使用的程序一般运行在用户模式下。<br>因此，一个普通驱动的编写和我们用C语言写一个HelloWorld程序，其实是差不多的。<br>下面我们就以一个最为简单的HelloWorld程序为框架，来依葫芦画瓢编写一个驱动程序，实现内核模式下的HelloWorld。</p><hr><h4 id="编写一个简单的驱动实现内核中打印HelloWorld"><a href="#编写一个简单的驱动实现内核中打印HelloWorld" class="headerlink" title="编写一个简单的驱动实现内核中打印HelloWorld"></a>编写一个简单的驱动实现内核中打印HelloWorld</h4><p>这是一个最简单的helloworld程序。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从上面的代码我们不难发现，最简单的程序也会有一个main函数。<br>那么驱动作为一个程序，它也应该拥有一个它自己的“main”函数。<br>在驱动中，我们把这个main函数叫做驱动入口函数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ntddk.h&gt;</span></span></span><br><span class="line">NTSTATUS DriverEntry（PDRIVER_OBJECT driver,UNICODE_STRING reg_path）</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">DbgPrint</span>(<span class="string">&quot;Hello,World!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上文给出了驱动实现的HelloWorld程序，我们先来试试它能不能达到我们需要的效果。<br><a href="https://imgtu.com/i/7rcBDO"><img src="https://s4.ax1x.com/2022/01/19/7rcBDO.png" alt="7rcBDO.png"></a></p><p>可以看到我们成功的在内核中打印了我们的HelloWorld！</p><p>那我们再回过头来分析一下这个简单的驱动程序。<br>前面说了驱动程序也拥有主函数，即上述代码中的DriverEntry函数。它对应了普通程序中的main函数。<br>而NTSTATUS就是DriverEntry函数的返回值类型，它对应了普通程序中的int。<br>DriverEntry函数又拥有两个参数，分别是driver，reg_path。<br>那他们又是什么意思呢？<br>driver是驱动对象，类型是PDRIVER_OBJECT，这个从英文意思上就可以看出来。<br>而reg_path是注册表路径，它的类型是UNICODE_STRING。<br>而且驱动程序因为运行在内核模式下，自然不能使用用户模式下的函数Printf来打印我们需要的信息。<br>这里我们就使用DbgPrint函数来打印内核信息。</p><p>自此程序的总体分析就结束了。<br>到这，可能会有人有疑问，怎么多出来了几个我不认识的类型？C语言有这些东西吗？<br>其实NTSTATUS,PDRIVER_OBJECT,UNICODE_STRING这些，是开发者定义的宏。这么做是为了更加清晰的去编写驱动，它们详细的内容在后面会提及，在第一章，只需知道它们是宏就好。</p><p>其实本文的驱动还存在一个问题，我暂且不在这里提出，看看有没有聪明的读者发现了，下一章中将会对这个问题编写解决方法。</p><p>而且下一章我们将在自己写的驱动中创建一个虚拟设备，并编写应用层面的程序对它进行访问。</p><hr><p>####附录：本文相关的程序及其使用<br>待编写</p>]]></content>
      
      
      
        <tags>
            
            <tag> x64驱动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/11/08/hello-world/"/>
      <url>/2021/11/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
